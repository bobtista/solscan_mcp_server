[project]
name = "solscan-mcp-server"
version = "0.2.0"
description = "A Model Context Protocol server providing tools to interact with the Solscan Pro API via LLMs"
readme = "README.md"
requires-python = ">=3.10"
authors = [{ name = "Bobby Battista" }]
keywords = ["solana", "solscan", "blockchain", "mcp", "llm", "automation", "defi"]
license = { text = "MIT" }
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
    "Topic :: Office/Business :: Financial",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    "aiohttp==3.11.0",
    "click>=8.1.7",
    "mcp>=1.0.0",
    "pydantic>=2.0.0",
    "fastmcp==2.1.2",
    "typing-extensions>=4.5.0",  # For enhanced type hints
    "python-dotenv>=1.0.0",     # For .env file support
]

[project.optional-dependencies]
dev = [
    "pyright>=1.1.389",
    "ruff>=0.7.3", 
    "pytest>=8.0.0",
    "pytest-asyncio>=0.23.0",
    "pytest-mock>=3.12.0",
    "pytest-cov>=4.1.0",        # For coverage reporting
    "black>=24.2.0",           # For code formatting
]

[project.scripts]
solscan-mcp-server = "solscan_mcp_server:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[dependency-groups]
dev = [
    "pyright>=1.1.389",
    "ruff>=0.7.3", 
    "pytest>=8.0.0",
    "pytest-asyncio>=0.23.0"
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"